{"version":3,"file":"Layout.js","sources":["../src/components/Layout/Layout.js"],"sourcesContent":["import React, { useContext, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useViewport } from '../../providers/Viewport/Viewport'\nimport { BREAKPOINTS, GU } from '../../style'\nimport { cssPx } from '../../utils'\n\nfunction getSizes(breakpoints) {\n  return Object.entries(breakpoints)\n    .filter(([name]) => name !== 'min')\n    .sort((a, b) => a[1] - b[1])\n}\n\nconst breakpointsType = PropTypes.shape({\n  min: PropTypes.number,\n  small: PropTypes.number,\n  medium: PropTypes.number,\n  large: PropTypes.number,\n})\n\n// Minimum margin around a layout\nconst MIN_MARGIN = 3 * GU\n\nfunction getLayoutSize(parentWidth, breakpoints) {\n  const sizes = getSizes(breakpoints)\n\n  let index = sizes.length\n  while (index--) {\n    if (parentWidth >= sizes[index][1]) {\n      return [\n        sizes[index][0],\n        sizes[index][1] - (index === 0 ? 0 : MIN_MARGIN * 2),\n      ]\n    }\n  }\n\n  return sizes[0]\n}\n\nfunction useMergeBreakpoints(breakpoints) {\n  const breakpointsAsString = JSON.stringify(breakpoints)\n\n  // Only compute once by comparing values rather than object references in dependency array\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useMemo(() => ({ ...BREAKPOINTS, ...breakpoints }), [\n    breakpointsAsString,\n  ])\n}\n\nconst LayoutContext = React.createContext({})\n\nfunction useLayout() {\n  const { layoutWidth, layoutName } = useContext(LayoutContext)\n  return {\n    layoutName,\n    layoutWidth,\n\n    // deprecated\n    name: layoutName,\n    width: layoutWidth,\n  }\n}\n\nfunction Layout({\n  breakpoints,\n  children,\n  paddingBottom,\n  parentWidth,\n  ...props\n}) {\n  const mergedBreakpoints = useMergeBreakpoints(breakpoints)\n\n  return (\n    <LayoutProvider parentWidth={parentWidth} breakpoints={breakpoints}>\n      <LayoutWidthLimiter\n        minWidth={mergedBreakpoints.min}\n        paddingBottom={paddingBottom}\n        {...props}\n      >\n        {children}\n      </LayoutWidthLimiter>\n    </LayoutProvider>\n  )\n}\n\nLayout.propTypes = {\n  breakpoints: breakpointsType,\n  children: PropTypes.node,\n  paddingBottom: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  parentWidth: PropTypes.number,\n}\n\nLayout.defaultProps = {\n  breakpoints: {},\n  paddingBottom: 3 * GU,\n}\n\nfunction LayoutProvider({ breakpoints, children, parentWidth }) {\n  const { width: viewportWidth } = useViewport()\n  const mergedBreakpoints = useMergeBreakpoints(breakpoints)\n\n  // If the parent width is not passed, use the viewport width.\n  const [layoutName, layoutWidth] = useMemo(\n    () =>\n      getLayoutSize(\n        parentWidth === undefined ? viewportWidth : parentWidth,\n        mergedBreakpoints\n      ),\n    [viewportWidth, parentWidth, mergedBreakpoints]\n  )\n\n  return (\n    <LayoutContext.Provider value={{ layoutWidth, layoutName }}>\n      {children}\n    </LayoutContext.Provider>\n  )\n}\n\nLayoutProvider.propTypes = {\n  breakpoints: breakpointsType,\n  children: PropTypes.node,\n  parentWidth: PropTypes.number,\n}\n\nLayoutProvider.defaultProps = {\n  breakpoints: {},\n}\n\n/* eslint-disable react/prop-types */\nfunction LayoutWidthLimiter({ children, minWidth, paddingBottom, ...props }) {\n  const { layoutName, layoutWidth } = useLayout()\n\n  return (\n    <div\n      {...props}\n      css={`\n        width: ${layoutName === 'small' ? 'auto' : `${layoutWidth}px`};\n        min-width: ${minWidth}px;\n        margin: 0 auto;\n        padding-bottom: ${cssPx(paddingBottom)};\n      `}\n    >\n      {children}\n    </div>\n  )\n}\n/* eslint-enable react/prop-types */\n\nexport default Layout\nexport { useLayout, LayoutProvider }\n"],"names":["getSizes","breakpoints","Object","entries","filter","name","sort","a","b","breakpointsType","PropTypes","shape","min","number","small","medium","large","MIN_MARGIN","GU","getLayoutSize","parentWidth","sizes","index","length","useMergeBreakpoints","breakpointsAsString","JSON","stringify","useMemo","BREAKPOINTS","LayoutContext","React","createContext","useLayout","layoutWidth","layoutName","useContext","width","Layout","children","paddingBottom","props","mergedBreakpoints","propTypes","node","oneOfType","string","defaultProps","LayoutProvider","viewportWidth","useViewport","undefined","LayoutWidthLimiter","minWidth","cssPx"],"mappings":"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"}
{"version":3,"file":"Help.js","sources":["../src/components/Help/Help.js"],"sourcesContent":["import React, { useCallback, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { useInside } from 'use-inside'\nimport { GU, textStyle } from '../../style'\nimport { useTheme } from '../../theme'\nimport { IconQuestion } from '../../icons'\nimport DiscButton from '../DiscButton/DiscButton'\nimport Popover from '../Popover/Popover'\n\nfunction Help({ hint, children }) {\n  const theme = useTheme()\n  const buttonElement = useRef()\n  const [visible, setVisible] = useState(false)\n  const open = useCallback(() => setVisible(true), [])\n  const close = useCallback(() => setVisible(false), [])\n  const [insideBoxHeading] = useInside('Box:heading')\n  const [insideFieldLabel] = useInside('Field:label')\n  return (\n    <React.Fragment>\n      <DiscButton\n        ref={buttonElement}\n        description={hint}\n        onClick={open}\n        size={2 * GU}\n        css={`\n          margin-top: ${insideFieldLabel ? -3 : 0}px;\n          margin-left: ${insideBoxHeading || insideFieldLabel ? 1 * GU : 0}px;\n        `}\n      >\n        <IconQuestion size=\"tiny\" />\n      </DiscButton>\n      <Popover\n        opener={buttonElement.current}\n        visible={visible}\n        onClose={close}\n        css={`\n          border: 0;\n          overflow: hidden;\n          ${textStyle('body3')};\n        `}\n      >\n        <div\n          css={`\n            position: relative;\n            max-width: ${48 * GU}px;\n            min-width: ${20 * GU}px;\n            padding: ${3 * GU}px;\n            &:before {\n              content: '';\n              position: absolute;\n              top: 0;\n              left: 0;\n              bottom: 0;\n              width: ${0.5 * GU}px;\n              background: ${theme.help};\n            }\n          `}\n        >\n          {children}\n        </div>\n      </Popover>\n    </React.Fragment>\n  )\n}\n\nHelp.propTypes = {\n  hint: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nexport default Help\n"],"names":["Help","hint","children","theme","useTheme","buttonElement","useRef","visible","setVisible","useState","open","useCallback","close","insideBoxHeading","useInside","insideFieldLabel","React","GU","IconQuestion","current","textStyle","help","propTypes","PropTypes","string","isRequired","node"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,SAASA,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAd,EAAkC;AAChC,QAAMC,KAAK,GAAGC,cAAQ,EAAtB;AACA,QAAMC,aAAa,GAAGC,YAAM,EAA5B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,cAAQ,CAAC,KAAD,CAAtC;AACA,QAAMC,IAAI,GAAGC,iBAAW,CAAC,MAAMH,UAAU,CAAC,IAAD,CAAjB,EAAyB,EAAzB,CAAxB;AACA,QAAMI,KAAK,GAAGD,iBAAW,CAAC,MAAMH,UAAU,CAAC,KAAD,CAAjB,EAA0B,EAA1B,CAAzB;AACA,QAAM,CAACK,gBAAD,IAAqBC,SAAS,CAAC,aAAD,CAApC;AACA,QAAM,CAACC,gBAAD,IAAqBD,SAAS,CAAC,aAAD,CAApC;AACA,sBACEE,wCAACA,yBAAD,CAAO,QAAP,qBACEA;AACE,IAAA,GAAG,EAAEX,aADP;AAEE,IAAA,WAAW,EAAEJ,IAFf;AAGE,IAAA,OAAO,EAAES,IAHX;AAIE,IAAA,IAAI,EAAE,IAAIO,YAJZ;AAAA,WAMkBF,gBAAgB,GAAG,CAAC,CAAJ,GAAQ,CAN1C;AAAA,YAOmBF,gBAAgB,IAAIE,gBAApB,GAAuC,IAAIE,YAA3C,GAAgD;AAPnE,kBAUED,wCAACE,uBAAD;AAAc,IAAA,IAAI,EAAC;AAAnB,IAVF,CADF,eAaEF;AACE,IAAA,MAAM,EAAEX,aAAa,CAACc,OADxB;AAEE,IAAA,OAAO,EAAEZ,OAFX;AAGE,IAAA,OAAO,EAAEK,KAHX;AAAA,YAOMQ,oBAAS,CAAC,OAAD;AAPf,kBAUEJ;AAAA,YAGiB,KAAKC,YAHtB;AAAA,YAIiB,KAAKA,YAJtB;AAAA,YAKe,IAAIA,YALnB;AAAA,YAYe,MAAMA,YAZrB;AAAA,YAaoBd,KAAK,CAACkB;AAb1B,KAiBGnB,QAjBH,CAVF,CAbF,CADF;AA8CD;;AAEDF,IAAI,CAACsB,SAAL,GAAiB;AACfrB,EAAAA,IAAI,EAAEsB,eAAS,CAACC,MAAV,CAAiBC,UADR;AAEfvB,EAAAA,QAAQ,EAAEqB,eAAS,CAACG,IAAV,CAAeD;AAFV,CAAjB;;;;;;;;;;;;;;;;;;;"}
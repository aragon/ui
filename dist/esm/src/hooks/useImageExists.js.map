{"version":3,"file":"useImageExists.js","sources":["../../../../src/hooks/useImageExists.js"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react'\nimport cachedMap from '../lib/cached-map'\n\nconst srcCache = cachedMap()\n\n// Check if a remote image exists and can be loaded within a specific amount of time.\nexport function useImageExists(src, timeUntilFallback = 50) {\n  const [exists, setExists] = useState(false)\n  const [loading, setLoading] = useState(true)\n  const [displayFallback, setDisplayFallback] = useState(false)\n\n  useEffect(() => {\n    let image = new Image()\n    const fallbackTimer = setTimeout(\n      () => setDisplayFallback(true),\n      timeUntilFallback\n    )\n\n    const init = () => {\n      if (!src) {\n        setExists(false)\n        setLoading(false)\n        return\n      }\n\n      if (srcCache.get(src)) {\n        success()\n        return\n      }\n\n      setExists(false)\n      setLoading(true)\n\n      // TODO: ensure only one image is loading at a time for a given src.\n      image.addEventListener('load', success)\n      image.src = src\n    }\n\n    const success = () => {\n      setLoading(false)\n      setExists(true)\n      srcCache.set(src, true)\n      done()\n    }\n\n    const done = () => {\n      clearTimeout(fallbackTimer)\n      if (image) {\n        image.removeEventListener('load', success)\n        image = null\n      }\n    }\n\n    init()\n\n    return done\n  }, [src, timeUntilFallback])\n\n  return useMemo(() => {\n    return { src, displayFallback, exists, loading }\n  }, [src, displayFallback, exists, loading])\n}\n\n// render prop\nexport const ImageExists = ({ timeUntilFallback, src, children }) =>\n  children(useImageExists(src, timeUntilFallback))\n"],"names":["srcCache","cachedMap","useImageExists","src","timeUntilFallback","exists","setExists","useState","loading","setLoading","displayFallback","setDisplayFallback","useEffect","image","Image","fallbackTimer","setTimeout","init","get","success","addEventListener","set","done","clearTimeout","removeEventListener","useMemo","ImageExists","children"],"mappings":";;;AAGA,MAAMA,QAAQ,GAAGC,SAAS,EAA1B;;AAGO,SAASC,cAAT,CAAwBC,GAAxB,EAA6BC,iBAAiB,GAAG,EAAjD,EAAqD;AAC1D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwCJ,QAAQ,CAAC,KAAD,CAAtD;AAEAK,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIC,KAAK,GAAG,IAAIC,KAAJ,EAAZ;AACA,UAAMC,aAAa,GAAGC,UAAU,CAC9B,MAAML,kBAAkB,CAAC,IAAD,CADM,EAE9BP,iBAF8B,CAAhC;;AAKA,UAAMa,IAAI,GAAG,MAAM;AACjB,UAAI,CAACd,GAAL,EAAU;AACRG,QAAAA,SAAS,CAAC,KAAD,CAAT;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD;;AAED,UAAIT,QAAQ,CAACkB,GAAT,CAAaf,GAAb,CAAJ,EAAuB;AACrBgB,QAAAA,OAAO;AACP;AACD;;AAEDb,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV,CAbiB;;AAgBjBI,MAAAA,KAAK,CAACO,gBAAN,CAAuB,MAAvB,EAA+BD,OAA/B;AACAN,MAAAA,KAAK,CAACV,GAAN,GAAYA,GAAZ;AACD,KAlBD;;AAoBA,UAAMgB,OAAO,GAAG,MAAM;AACpBV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAH,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAN,MAAAA,QAAQ,CAACqB,GAAT,CAAalB,GAAb,EAAkB,IAAlB;AACAmB,MAAAA,IAAI;AACL,KALD;;AAOA,UAAMA,IAAI,GAAG,MAAM;AACjBC,MAAAA,YAAY,CAACR,aAAD,CAAZ;;AACA,UAAIF,KAAJ,EAAW;AACTA,QAAAA,KAAK,CAACW,mBAAN,CAA0B,MAA1B,EAAkCL,OAAlC;AACAN,QAAAA,KAAK,GAAG,IAAR;AACD;AACF,KAND;;AAQAI,IAAAA,IAAI;AAEJ,WAAOK,IAAP;AACD,GA7CQ,EA6CN,CAACnB,GAAD,EAAMC,iBAAN,CA7CM,CAAT;AA+CA,SAAOqB,OAAO,CAAC,MAAM;AACnB,WAAO;AAAEtB,MAAAA,GAAF;AAAOO,MAAAA,eAAP;AAAwBL,MAAAA,MAAxB;AAAgCG,MAAAA;AAAhC,KAAP;AACD,GAFa,EAEX,CAACL,GAAD,EAAMO,eAAN,EAAuBL,MAAvB,EAA+BG,OAA/B,CAFW,CAAd;AAGD;;MAGYkB,WAAW,GAAG,CAAC;AAAEtB,EAAAA,iBAAF;AAAqBD,EAAAA,GAArB;AAA0BwB,EAAAA;AAA1B,CAAD,KACzBA,QAAQ,CAACzB,cAAc,CAACC,GAAD,EAAMC,iBAAN,CAAf;;;;"}
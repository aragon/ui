{"version":3,"file":"palettes.js","sources":["../../../../src/theme-legacy/palettes.js"],"sourcesContent":["import { warn, warnOnce } from '../utils'\nimport aragon from './aragon'\n\n// These need to match the names in the Open Color palettes\nconst THEME_NAME = 'Aragon UI'\nconst THEME_DARK_NAME = 'Aragon UI Dark'\nconst BRAND_NAME = 'Aragon Brand'\n\n// Name of the group a given palette belong to\nconst getGroupName = name => {\n  if (name === THEME_NAME) return 'theme'\n  if (name === THEME_DARK_NAME) return 'themeDark'\n  if (name === BRAND_NAME) return 'brand'\n  return 'colors'\n}\n\n// Resolve a single color\nconst resolveColor = (value, palettes) => {\n  // already resolved color\n  if (!value.startsWith('=')) {\n    return value\n  }\n\n  const [paletteName, key] = value.slice(1).split('.')\n  const color = palettes[paletteName] && palettes[paletteName][key]\n\n  if (!color) {\n    throw new Error(`resolveColor: ${value} doesn’t seem to exist`)\n  }\n\n  // follow the references until we find one\n  if (color.startsWith('=')) {\n    return resolveColor(color, palettes)\n  }\n  return color\n}\n\n// Resolve all the colors in a palette\nconst resolveColors = (palette, palettes) =>\n  Object.entries(palette).reduce((pal, [name, value]) => {\n    if (typeof value === 'string') {\n      pal[name] = resolveColor(value, palettes)\n    }\n    return pal\n  }, {})\n\n// Prepare groups from the palettes: theme, themeDark, brand and colors.\nconst generateGroups = palettes =>\n  Object.entries(palettes).reduce(\n    (groups, [paletteName, palette]) => {\n      const groupName = getGroupName(paletteName)\n\n      if (groupName === 'colors') {\n        groups.colors[paletteName] = resolveColors(palette, palettes)\n      } else {\n        groups[groupName] = resolveColors(palette, palettes)\n      }\n\n      return groups\n    },\n    { colors: {} }\n  )\n\n// Deprecate any access to the palettes\nconst { themeDark, theme, brand, colors } = Object.fromEntries(\n  Object.entries(generateGroups(aragon)).map(([name, group]) => [\n    name,\n    new Proxy(group, {\n      get(group, colorName) {\n        if (group[colorName]) {\n          warnOnce(\n            `theme-legacy:${name}.${colorName}`,\n            `${name}.${colorName} was accessed but ${name} will be removed soon, ` +\n              `please use useTheme() instead.`\n          )\n        } else {\n          warn(\n            `${name}.${colorName} doesn’t exist. ${name} will be removed soon, ` +\n              `please use useTheme() instead.`\n          )\n        }\n        return group[colorName]\n      },\n    }),\n  ])\n)\n\n// TODO: show a deprecating warning when any of these colors get accessed once.\nexport { themeDark, theme, brand, colors }\n"],"names":["THEME_NAME","THEME_DARK_NAME","BRAND_NAME","getGroupName","name","resolveColor","value","palettes","startsWith","paletteName","key","slice","split","color","Error","resolveColors","palette","Object","entries","reduce","pal","generateGroups","groups","groupName","colors","themeDark","theme","brand","fromEntries","aragon","map","group","Proxy","get","colorName","warnOnce","warn"],"mappings":"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"}
{"version":3,"file":"FocusVisible.js","sources":["../../../../../src/components/FocusVisible/FocusVisible.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n// Implements a behavior similar to :focus-visible for browsers that are not\n// supporting it yet.\n//\n// It follows the Chrome implementation, checking for a pointer device rather\n// than a keyboard event.\n//\n// Resources:\n//  - https://caniuse.com/#search=%3Afocus-visible\n//  - https://github.com/WICG/focus-visible/issues/88#issuecomment-363227219\n//  - https://chromium-review.googlesource.com/c/chromium/src/+/897002<Paste>\n//\nclass FocusVisible extends React.Component {\n  static propTypes = {\n    // children is called with an object containing two entries:\n    //   - focusVisible represents the visibility of the focus (boolean).\n    //   - onFocus() need to be called when the target element is focused.\n    children: PropTypes.func.isRequired,\n  }\n  _element = React.createRef()\n  _document = null\n  state = {\n    focusVisible: false,\n  }\n  componentDidMount() {\n    // `document` was previously set as a state entry, which was having the\n    // advantages of keeping track of it, and also triggering a rerender to\n    // remove the injected span.\n    //\n    // The issue with this approach is that the component can get unmounted\n    // before the state gets updated (e.g. in case of an error in the tree),\n    // preventing to remove the event listeners.\n    //\n    // this._document is now set on the instance directly, and\n    // this.forceUpdate() is used to trigger the second render needed to remove\n    // the injected span.\n    this._document = this._element.current.ownerDocument\n    this._document.addEventListener('mousedown', this.handlePointerEvent)\n    this._document.addEventListener('mouseup', this.handlePointerEvent)\n    this._document.addEventListener('touchstart', this.handlePointerEvent)\n    this._document.addEventListener('touchend', this.handlePointerEvent)\n    this.forceUpdate()\n  }\n  componentWillUnmount() {\n    if (this._document) {\n      this._document.removeEventListener('mousedown', this.handlePointerEvent)\n      this._document.removeEventListener('mouseup', this.handlePointerEvent)\n      this._document.removeEventListener('touchstart', this.handlePointerEvent)\n      this._document.removeEventListener('touchend', this.handlePointerEvent)\n    }\n  }\n  // It doesnâ€™t seem to be specified, but pointer-related events happen before\n  // the focus-related events on every modern browser.\n  handlePointerEvent = e => {\n    this._pointerActive = true\n    this._timer = setTimeout(() => {\n      this._pointerActive = false\n    }, 0)\n    if (this.state.focusVisible) {\n      this.setState({ focusVisible: false })\n    }\n  }\n  // This is passed to `children()`, and called from the outside.\n  handleFocus = () => {\n    this.setState({ focusVisible: !this._pointerActive })\n  }\n  render() {\n    const { focusVisible } = this.state\n    return (\n      <React.Fragment>\n        {this.props.children({ focusVisible, onFocus: this.handleFocus })}\n        {!this._document && <span ref={this._element} />}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default FocusVisible\n"],"names":["FocusVisible","React","Component","createRef","focusVisible","e","_pointerActive","_timer","setTimeout","state","setState","componentDidMount","_document","_element","current","ownerDocument","addEventListener","handlePointerEvent","forceUpdate","componentWillUnmount","removeEventListener","render","props","children","onFocus","handleFocus","PropTypes","func","isRequired"],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,YAAN,SAA2BC,KAAK,CAACC,SAAjC,CAA2C;AAAA;AAAA;;AAAA,mDAO9BD,KAAK,CAACE,SAAN,EAP8B;;AAAA,uCAQ7B,IAR6B;;AAAA,mCASjC;AACNC,MAAAA,YAAY,EAAE;AADR,KATiC;;AAAA,gDAyCpBC,CAAC,IAAI;AACxB,WAAKC,cAAL,GAAsB,IAAtB;AACA,WAAKC,MAAL,GAAcC,UAAU,CAAC,MAAM;AAC7B,aAAKF,cAAL,GAAsB,KAAtB;AACD,OAFuB,EAErB,CAFqB,CAAxB;;AAGA,UAAI,KAAKG,KAAL,CAAWL,YAAf,EAA6B;AAC3B,aAAKM,QAAL,CAAc;AAAEN,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACD;AACF,KAjDwC;;AAAA,yCAmD3B,MAAM;AAClB,WAAKM,QAAL,CAAc;AAAEN,QAAAA,YAAY,EAAE,CAAC,KAAKE;AAAtB,OAAd;AACD,KArDwC;AAAA;;AAYzCK,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAKC,SAAL,GAAiB,KAAKC,QAAL,CAAcC,OAAd,CAAsBC,aAAvC;;AACA,SAAKH,SAAL,CAAeI,gBAAf,CAAgC,WAAhC,EAA6C,KAAKC,kBAAlD;;AACA,SAAKL,SAAL,CAAeI,gBAAf,CAAgC,SAAhC,EAA2C,KAAKC,kBAAhD;;AACA,SAAKL,SAAL,CAAeI,gBAAf,CAAgC,YAAhC,EAA8C,KAAKC,kBAAnD;;AACA,SAAKL,SAAL,CAAeI,gBAAf,CAAgC,UAAhC,EAA4C,KAAKC,kBAAjD;;AACA,SAAKC,WAAL;AACD;;AACDC,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKP,SAAT,EAAoB;AAClB,WAAKA,SAAL,CAAeQ,mBAAf,CAAmC,WAAnC,EAAgD,KAAKH,kBAArD;;AACA,WAAKL,SAAL,CAAeQ,mBAAf,CAAmC,SAAnC,EAA8C,KAAKH,kBAAnD;;AACA,WAAKL,SAAL,CAAeQ,mBAAf,CAAmC,YAAnC,EAAiD,KAAKH,kBAAtD;;AACA,WAAKL,SAAL,CAAeQ,mBAAf,CAAmC,UAAnC,EAA+C,KAAKH,kBAApD;AACD;AACF,GAtCwC;AAwCzC;;;AAcAI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA;AAAF,QAAmB,KAAKK,KAA9B;AACA,wBACE,oBAAC,KAAD,CAAO,QAAP,QACG,KAAKa,KAAL,CAAWC,QAAX,CAAoB;AAAEnB,MAAAA,YAAF;AAAgBoB,MAAAA,OAAO,EAAE,KAAKC;AAA9B,KAApB,CADH,EAEG,CAAC,KAAKb,SAAN,iBAAmB;AAAM,MAAA,GAAG,EAAE,KAAKC;AAAhB,MAFtB,CADF;AAMD;;AA9DwC;;gBAArCb,2BACe;AACjB;AACA;AACA;AACAuB,EAAAA,QAAQ,EAAEG,SAAS,CAACC,IAAV,CAAeC;AAJR;;;;"}
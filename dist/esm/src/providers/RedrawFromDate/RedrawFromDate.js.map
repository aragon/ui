{"version":3,"file":"RedrawFromDate.js","sources":["../../../../../src/providers/RedrawFromDate/RedrawFromDate.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport getDisplayName from 'react-display-name'\nimport dayjs from 'dayjs'\nimport { difference } from '../../utils/date'\n\n// Render prop component for re-rendering based on a given date. Automatically\n// adjusts the re-render timer to be one second, minute, or hour based on the\n// fromDate prop.\n// For a discussion on pitfalls, see\n// https://gist.github.com/staltz/08bf613199092eeb41ac8137d51eb5e6\n\nconst EVERY_SECOND = 1000\nconst EVERY_MINUTE = EVERY_SECOND * 60\nconst EVERY_HOUR = EVERY_MINUTE * 60\n\nconst getRedrawTime = fromDate => {\n  const { days, hours, minutes } = difference(new Date(), fromDate)\n  return hours || days ? EVERY_HOUR : minutes > 1 ? EVERY_MINUTE : EVERY_SECOND\n}\n\nclass RedrawFromDate extends React.Component {\n  static propTypes = {\n    children: PropTypes.func.isRequired,\n    fromDate: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.instanceOf(Date),\n    ]).isRequired,\n  }\n  state = {\n    redrawTime: EVERY_HOUR,\n    lastDraw: -1,\n  }\n  componentDidMount() {\n    const { fromDate } = this.props\n    if (fromDate) {\n      this.restartDrawInterval(getRedrawTime(fromDate))\n    }\n  }\n  componentWillReceiveProps({ fromDate }) {\n    if (!fromDate && this.props.fromDate) {\n      this.clearInterval()\n    } else if (!dayjs(fromDate).isSame(this.props.fromDate)) {\n      this.restartDrawInterval(getRedrawTime(this.props.fromDate))\n    }\n  }\n  componentWillUnmount() {\n    this.clearInterval()\n  }\n  clearInterval = () => {\n    this.interval && clearInterval(this.interval)\n  }\n  restartDrawInterval = redrawTime => {\n    this.clearInterval()\n\n    this.interval = setInterval(() => {\n      this.setState({ lastDraw: Date.now() })\n\n      const newRedrawTime = getRedrawTime(this.props.fromDate)\n      if (newRedrawTime !== redrawTime) {\n        this.restartDrawInterval(newRedrawTime)\n      }\n    }, redrawTime)\n  }\n  render() {\n    return this.props.children()\n  }\n}\n\nconst hocWrap = Component => {\n  const HOC = props => (\n    <RedrawFromDate fromDate={props.fromDate}>\n      {() => <Component {...props} />}\n    </RedrawFromDate>\n  )\n  HOC.propTypes = {\n    fromDate: RedrawFromDate.propTypes.fromDate,\n  }\n  HOC.displayName = `RedrawFromDate(${getDisplayName(Component)})`\n  return HOC\n}\n\nRedrawFromDate.hocWrap = hocWrap\n\nexport { RedrawFromDate, hocWrap }\nexport default RedrawFromDate\n"],"names":["EVERY_SECOND","EVERY_MINUTE","EVERY_HOUR","getRedrawTime","fromDate","days","hours","minutes","difference","Date","RedrawFromDate","React","Component","redrawTime","lastDraw","interval","clearInterval","setInterval","setState","now","newRedrawTime","props","restartDrawInterval","componentDidMount","componentWillReceiveProps","dayjs","isSame","componentWillUnmount","render","children","PropTypes","func","isRequired","oneOfType","string","number","instanceOf","hocWrap","HOC","propTypes","displayName","getDisplayName"],"mappings":"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"}
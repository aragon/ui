{"version":3,"file":"observe2.js","sources":["../../../../../src/providers/observe/observe.js"],"sourcesContent":["import React from 'react'\nimport getDisplayName from 'react-display-name'\nimport { warnOnce } from '../../utils'\n\n// Higher-order component for convenient subscriptions to RxJS observables\nconst observe = (observe, initialState = {}) => Component =>\n  class extends React.Component {\n    static displayName = `Observe(${getDisplayName(Component)})`\n    static propTypes = {\n      observable: ({ observable }, _, componentName) => {\n        if (observable && typeof observable.subscribe !== 'function') {\n          throw new Error(\n            `Invalid prop \\`observable\\` supplied to \\`${componentName}\\` ` +\n              '(wrapped by `observe()`). ' +\n              '`observable` must be an RxJS Observable-like object. ' +\n              `Given ${observable} instead.`\n          )\n        }\n      },\n    }\n    state = initialState\n    componentDidMount() {\n      this.subscribe(this.props.observable)\n    }\n    componentWillReceiveProps({ observable: nextObservable }) {\n      const { observable } = this.props\n      // If a new observable gets passed in, unsubscribe from the old and subscribe to the new\n      if (nextObservable !== observable) {\n        this.unsubscribe()\n        this.subscribe(nextObservable)\n      }\n    }\n    componentWillUnmount() {\n      this.unsubscribe()\n    }\n    subscribe = observable => {\n      if (observable) {\n        this.setState({\n          subscription: observe(observable).subscribe(state => {\n            this.setState(state)\n          }),\n        })\n      }\n    }\n    unsubscribe = () => {\n      this.state.subscription && this.state.subscription.unsubscribe()\n    }\n    render() {\n      warnOnce(\n        'observe()',\n        'observe() is deprecated. If you are using it with @aragon/api, using @aragon/api-react is now recommended instead.'\n      )\n      const { ...props } = this.props\n      // Don't pass down the given observable\n      delete props.observable\n\n      return <Component {...this.state} {...props} />\n    }\n  }\n\nexport default observe\n"],"names":["observe","initialState","Component","React","observable","setState","subscription","subscribe","state","unsubscribe","componentDidMount","props","componentWillReceiveProps","nextObservable","componentWillUnmount","render","warnOnce","getDisplayName","_","componentName","Error"],"mappings":";;;;;;AAKA,MAAMA,OAAO,GAAG,CAACA,OAAD,EAAUC,YAAY,GAAG,EAAzB,KAAgCC,SAAS;AAAA;;AAAA,0BACvD,cAAcC,KAAK,CAACD,SAApB,CAA8B;AAAA;AAAA;;AAAA,qCAcpBD,YAdoB;;AAAA,yCA6BhBG,UAAU,IAAI;AACxB,YAAIA,UAAJ,EAAgB;AACd,eAAKC,QAAL,CAAc;AACZC,YAAAA,YAAY,EAAEN,OAAO,CAACI,UAAD,CAAP,CAAoBG,SAApB,CAA8BC,KAAK,IAAI;AACnD,mBAAKH,QAAL,CAAcG,KAAd;AACD,aAFa;AADF,WAAd;AAKD;AACF,OArC2B;;AAAA,2CAsCd,MAAM;AAClB,aAAKA,KAAL,CAAWF,YAAX,IAA2B,KAAKE,KAAL,CAAWF,YAAX,CAAwBG,WAAxB,EAA3B;AACD,OAxC2B;AAAA;;AAe5BC,IAAAA,iBAAiB,GAAG;AAClB,WAAKH,SAAL,CAAe,KAAKI,KAAL,CAAWP,UAA1B;AACD;;AACDQ,IAAAA,yBAAyB,CAAC;AAAER,MAAAA,UAAU,EAAES;AAAd,KAAD,EAAiC;AACxD,YAAM;AAAET,QAAAA;AAAF,UAAiB,KAAKO,KAA5B,CADwD;;AAGxD,UAAIE,cAAc,KAAKT,UAAvB,EAAmC;AACjC,aAAKK,WAAL;AACA,aAAKF,SAAL,CAAeM,cAAf;AACD;AACF;;AACDC,IAAAA,oBAAoB,GAAG;AACrB,WAAKL,WAAL;AACD;;AAaDM,IAAAA,MAAM,GAAG;AACPC,MAAAA,QAAQ,CACN,WADM,EAEN,oHAFM,CAAR;AAIA,YAAM,EAAE,GAAGL;AAAL,UAAe,KAAKA,KAA1B,CALO;;AAOP,aAAOA,KAAK,CAACP,UAAb;AAEA,0BAAO,oBAAC,SAAD,eAAe,KAAKI,KAApB,EAA+BG,KAA/B,EAAP;AACD;;AAnD2B,GADyB,yCAE/B,WAAUM,cAAc,CAACf,SAAD,CAAY,GAFL,wCAGlC;AACjBE,IAAAA,UAAU,EAAE,CAAC;AAAEA,MAAAA;AAAF,KAAD,EAAiBc,CAAjB,EAAoBC,aAApB,KAAsC;AAChD,UAAIf,UAAU,IAAI,OAAOA,UAAU,CAACG,SAAlB,KAAgC,UAAlD,EAA8D;AAC5D,cAAM,IAAIa,KAAJ,CACH,6CAA4CD,aAAc,KAA3D,GACE,4BADF,GAEE,uDAFF,GAGG,SAAQf,UAAW,WAJlB,CAAN;AAMD;AACF;AAVgB,GAHkC;AAAA,CAAzD;;AAuDA,gBAAeJ,OAAf;;;;"}
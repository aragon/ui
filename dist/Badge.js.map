{"version":3,"file":"Badge.js","sources":["../src/components/Badge/Badge.js"],"sourcesContent":["import React from 'react'\nimport Tag from '../Tag/Tag'\nimport { warnOnce } from '../../utils/environment'\nimport { useTheme } from '../../theme'\n\nfunction deprecationWarning() {\n  warnOnce(\n    'Badge',\n    '\"Badge\" and its variants have been deprecated. Please use \"Tag\" instead.'\n  )\n}\n\n/* eslint-disable react/prop-types */\nfunction Badge({ background, foreground, shape, children, ...props }) {\n  deprecationWarning()\n  return (\n    <Tag\n      background={background}\n      color={foreground}\n      size={shape === 'smalldisc' || shape === 'compact' ? 'small' : 'normal'}\n      {...props}\n    >\n      {children}\n    </Tag>\n  )\n}\n\nfunction BadgeNumber({\n  background,\n  children,\n  foreground,\n  label,\n  shape,\n  small,\n  ...props\n}) {\n  deprecationWarning()\n  if (!children && typeof label === 'number') {\n    return (\n      <Badge\n        limitDigits\n        background={background}\n        color={foreground}\n        label={label}\n        size={small ? 'small' : 'normal'}\n        {...props}\n      />\n    )\n  }\n  return (\n    <Tag count={true} background={background} color={foreground} {...props}>\n      {children || label}\n    </Tag>\n  )\n}\n\nfunction BadgeInfo(props) {\n  return <BadgeNumber {...props} />\n}\n\nfunction BadgeIdentity(props) {\n  return <Badge {...props} uppercase={false} />\n}\n\nfunction BadgeApp(props) {\n  return <Badge {...props} mode=\"identifier\" />\n}\n\nfunction BadgeNotification(props) {\n  const theme = useTheme()\n  return (\n    <BadgeNumber\n      background={String(theme.positive)}\n      foreground={String(theme.positiveContent)}\n      {...props}\n    />\n  )\n}\n/* eslint-enable react/prop-types */\n\nBadge.Info = BadgeInfo\nBadge.Notification = BadgeNotification\nBadge.Identity = BadgeIdentity\nBadge.App = BadgeApp\n\nexport { BadgeNumber }\nexport default Badge\n"],"names":["deprecationWarning","warnOnce","Badge","background","foreground","shape","children","props","React","Tag","BadgeNumber","label","small","BadgeInfo","BadgeIdentity","BadgeApp","BadgeNotification","theme","useTheme","String","positive","positiveContent","Info","Notification","Identity","App"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAKA,SAASA,kBAAT,GAA8B;AAC5BC,EAAAA,oBAAQ,CACN,OADM,EAEN,0EAFM,CAAR;AAID;AAED;;;AACA,SAASC,KAAT,CAAe;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA,KAA1B;AAAiCC,EAAAA,QAAjC;AAA2C,KAAGC;AAA9C,CAAf,EAAsE;AACpEP,EAAAA,kBAAkB;AAClB,sBACEQ,wCAACC,cAAD;AACE,IAAA,UAAU,EAAEN,UADd;AAEE,IAAA,KAAK,EAAEC,UAFT;AAGE,IAAA,IAAI,EAAEC,KAAK,KAAK,WAAV,IAAyBA,KAAK,KAAK,SAAnC,GAA+C,OAA/C,GAAyD;AAHjE,KAIME,KAJN,GAMGD,QANH,CADF;AAUD;;AAED,SAASI,WAAT,CAAqB;AACnBP,EAAAA,UADmB;AAEnBG,EAAAA,QAFmB;AAGnBF,EAAAA,UAHmB;AAInBO,EAAAA,KAJmB;AAKnBN,EAAAA,KALmB;AAMnBO,EAAAA,KANmB;AAOnB,KAAGL;AAPgB,CAArB,EAQG;AACDP,EAAAA,kBAAkB;;AAClB,MAAI,CAACM,QAAD,IAAa,OAAOK,KAAP,KAAiB,QAAlC,EAA4C;AAC1C,wBACEH,wCAAC,KAAD;AACE,MAAA,WAAW,MADb;AAEE,MAAA,UAAU,EAAEL,UAFd;AAGE,MAAA,KAAK,EAAEC,UAHT;AAIE,MAAA,KAAK,EAAEO,KAJT;AAKE,MAAA,IAAI,EAAEC,KAAK,GAAG,OAAH,GAAa;AAL1B,OAMML,KANN,EADF;AAUD;;AACD,sBACEC,wCAACC,cAAD;AAAK,IAAA,KAAK,EAAE,IAAZ;AAAkB,IAAA,UAAU,EAAEN,UAA9B;AAA0C,IAAA,KAAK,EAAEC;AAAjD,KAAiEG,KAAjE,GACGD,QAAQ,IAAIK,KADf,CADF;AAKD;;AAED,SAASE,SAAT,CAAmBN,KAAnB,EAA0B;AACxB,sBAAOC,wCAAC,WAAD,EAAiBD,KAAjB,CAAP;AACD;;AAED,SAASO,aAAT,CAAuBP,KAAvB,EAA8B;AAC5B,sBAAOC,wCAAC,KAAD,wBAAWD,KAAX;AAAkB,IAAA,SAAS,EAAE;AAA7B,KAAP;AACD;;AAED,SAASQ,QAAT,CAAkBR,KAAlB,EAAyB;AACvB,sBAAOC,wCAAC,KAAD,wBAAWD,KAAX;AAAkB,IAAA,IAAI,EAAC;AAAvB,KAAP;AACD;;AAED,SAASS,iBAAT,CAA2BT,KAA3B,EAAkC;AAChC,QAAMU,KAAK,GAAGC,cAAQ,EAAtB;AACA,sBACEV,wCAAC,WAAD;AACE,IAAA,UAAU,EAAEW,MAAM,CAACF,KAAK,CAACG,QAAP,CADpB;AAEE,IAAA,UAAU,EAAED,MAAM,CAACF,KAAK,CAACI,eAAP;AAFpB,KAGMd,KAHN,EADF;AAOD;AACD;;;AAEAL,KAAK,CAACoB,IAAN,GAAaT,SAAb;AACAX,KAAK,CAACqB,YAAN,GAAqBP,iBAArB;AACAd,KAAK,CAACsB,QAAN,GAAiBV,aAAjB;AACAZ,KAAK,CAACuB,GAAN,GAAYV,QAAZ;;;;;"}
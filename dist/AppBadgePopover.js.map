{"version":3,"file":"AppBadgePopover.js","sources":["../src/components/AppBadge/AppBadgePopover.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from '../../proptypes'\nimport { ImageExists } from '../../hooks'\nimport { blockExplorerUrl } from '../../utils'\nimport AddressField from '../AddressField/AddressField'\nimport BadgePopoverBase from '../BadgeBase/BadgePopoverBase'\nimport BadgePopoverActionType from '../BadgeBase/BadgePopoverActionType'\nimport Link from '../Link/Link'\n\nconst AppBadgePopover = React.memo(function AppBadgePopover({\n  appAddress,\n  iconFallbackSrc,\n  iconSrc,\n  networkType,\n  onClose,\n  opener,\n  popoverAction,\n  title,\n  visible,\n}) {\n  const etherscanUrl = blockExplorerUrl('address', appAddress, { networkType })\n  return (\n    <BadgePopoverBase\n      addressField={\n        <ImageExists src={iconSrc}>\n          {({ exists, displayFallback }) => (\n            <AddressField\n              address={appAddress}\n              icon={<Icon src={exists ? iconSrc : iconFallbackSrc} />}\n            />\n          )}\n        </ImageExists>\n      }\n      link={etherscanUrl && <Link href={etherscanUrl}>See on Etherscan</Link>}\n      onClose={onClose}\n      opener={opener}\n      popoverAction={popoverAction}\n      title={title}\n      visible={visible}\n    />\n  )\n})\n\nAppBadgePopover.propTypes = {\n  appAddress: PropTypes.string.isRequired,\n  iconFallbackSrc: PropTypes.string,\n  iconSrc: PropTypes.string,\n  networkType: PropTypes.string,\n  onClose: PropTypes.func,\n  opener: PropTypes._element,\n  popoverAction: BadgePopoverActionType,\n  title: PropTypes.node.isRequired,\n  visible: PropTypes.bool,\n}\n\nfunction Icon({ src, ...props }) {\n  return (\n    <div\n      css={`\n        width: 100%;\n        height: 100%;\n        background-size: contain;\n        background-position: 50% 50%;\n        background-repeat: no-repeat;\n        background-image: url(${src});\n      `}\n      {...props}\n    />\n  )\n}\n\nIcon.propTypes = {\n  src: PropTypes.string.isRequired,\n}\n\nexport default AppBadgePopover\n"],"names":["AppBadgePopover","React","memo","appAddress","iconFallbackSrc","iconSrc","networkType","onClose","opener","popoverAction","title","visible","etherscanUrl","blockExplorerUrl","BadgePopoverBase","ImageExists","exists","displayFallback","AddressField","Link","propTypes","PropTypes","string","isRequired","func","_element","BadgePopoverActionType","node","bool","Icon","src","props"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MASMA,eAAe,gBAAGC,yBAAK,CAACC,IAAN,CAAW,SAASF,eAAT,CAAyB;AAC1DG,EAAAA,UAD0D;AAE1DC,EAAAA,eAF0D;AAG1DC,EAAAA,OAH0D;AAI1DC,EAAAA,WAJ0D;AAK1DC,EAAAA,OAL0D;AAM1DC,EAAAA,MAN0D;AAO1DC,EAAAA,aAP0D;AAQ1DC,EAAAA,KAR0D;AAS1DC,EAAAA;AAT0D,CAAzB,EAUhC;AACD,QAAMC,YAAY,GAAGC,qBAAgB,CAAC,SAAD,EAAYV,UAAZ,EAAwB;AAAEG,IAAAA;AAAF,GAAxB,CAArC;AACA,sBACEL,wCAACa,2BAAD;AACE,IAAA,YAAY,eACVb,wCAACc,0BAAD;AAAa,MAAA,GAAG,EAAEV;AAAlB,OACG,CAAC;AAAEW,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAD,kBACChB,wCAACiB,uBAAD;AACE,MAAA,OAAO,EAAEf,UADX;AAEE,MAAA,IAAI,eAAEF,wCAAC,IAAD;AAAM,QAAA,GAAG,EAAEe,MAAM,GAAGX,OAAH,GAAaD;AAA9B;AAFR,MAFJ,CAFJ;AAWE,IAAA,IAAI,EAAEQ,YAAY,iBAAIX,wCAACkB,eAAD;AAAM,MAAA,IAAI,EAAEP;AAAZ,0BAXxB;AAYE,IAAA,OAAO,EAAEL,OAZX;AAaE,IAAA,MAAM,EAAEC,MAbV;AAcE,IAAA,aAAa,EAAEC,aAdjB;AAeE,IAAA,KAAK,EAAEC,KAfT;AAgBE,IAAA,OAAO,EAAEC;AAhBX,IADF;AAoBD,CAhCuB;AAkCxBX,eAAe,CAACoB,SAAhB,GAA4B;AAC1BjB,EAAAA,UAAU,EAAEkB,mBAAS,CAACC,MAAV,CAAiBC,UADH;AAE1BnB,EAAAA,eAAe,EAAEiB,mBAAS,CAACC,MAFD;AAG1BjB,EAAAA,OAAO,EAAEgB,mBAAS,CAACC,MAHO;AAI1BhB,EAAAA,WAAW,EAAEe,mBAAS,CAACC,MAJG;AAK1Bf,EAAAA,OAAO,EAAEc,mBAAS,CAACG,IALO;AAM1BhB,EAAAA,MAAM,EAAEa,mBAAS,CAACI,QANQ;AAO1BhB,EAAAA,aAAa,EAAEiB,iCAPW;AAQ1BhB,EAAAA,KAAK,EAAEW,mBAAS,CAACM,IAAV,CAAeJ,UARI;AAS1BZ,EAAAA,OAAO,EAAEU,mBAAS,CAACO;AATO,CAA5B;;AAYA,SAASC,IAAT,CAAc;AAAEC,EAAAA,GAAF;AAAO,KAAGC;AAAV,CAAd,EAAiC;AAC/B,sBACE9B,0EASM8B,KATN;AAAA,WAO4BD;AAP5B,KADF;AAaD;;AAEDD,IAAI,CAACT,SAAL,GAAiB;AACfU,EAAAA,GAAG,EAAET,mBAAS,CAACC,MAAV,CAAiBC;AADP,CAAjB;;;;;;;;;"}